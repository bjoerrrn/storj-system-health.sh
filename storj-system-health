#!/usr/bin/env bash

# discord webhook url
url='https://discord.com/api/webhooks/ .. < REPLACE WITH YOUR DISCORD WEBHOOK URL > .. '

# grab if debug param exists or not
if [ $# -ge 1 ]
then 
	DEB=1
	echo -e "debug flag on"
else
	DEB=0
	echo -e "debug flag off"
fi

# count errors and grab disk usage
tmp_disk_usage="$(df /mnt/storagenode | grep / | awk '{ print $5}' | sed 's/%//g')%" # .. REPLACE STORAGENODE WITH YOUR STORJ MOUNT POINT ..
tmp_fatal_errors=$(docker logs --since "24h" storagenode 2>&1 | grep "FATAL" -c)
tmp_audits_failed=$(docker logs --since "24h" storagenode 2>&1 | grep -E "GET_AUDIT|GET_REPAIR" | grep "failed" -c)
tmp_rest_of_errors=$(docker logs --since "24h" storagenode 2>&1 | grep ERROR | grep -v -e "collector" -e "piecestore" -c)


# select error messages in detail
DLOG=""
ERRS="$(docker logs --since '24h' storagenode 2>&1 | grep ERROR | grep -v -e 'collector' -e 'piecestore')" 
FATS="$(docker logs --since '24h' storagenode 2>&1 | grep FATAL)"
AUDS="$(docker logs --since '24h' storagenode 2>&1 | grep -E 'GET_AUDIT|GET_REPAIR' | grep 'failed')"


# concatenate status message
if [[ $tmp_fatal_errors -eq 0 ]] && [[ $tmp_rest_of_errors -eq 0 ]] && [[ $tmp_audits_failed -eq 0 ]]; then 
	DLOG="**health check :** hdd $tmp_disk_usage; "
else
	DLOG="**warning :** "
fi

if [[ $tmp_fatal_errors -eq 0 ]] && [[ $tmp_rest_of_errors -eq 0 ]]; then 
	DLOG="$DLOG errors ok; "
elif [[ $tmp_fatal_errors -eq 0 ]]; then
	DLOG="$DLOG **ERRORS FOUND** ($tmp_rest_of_errors); "
elif [[ $tmp_rest_of_errors -eq 0 ]]; then
	DLOG="$DLOG **FATAL ERRORS** ($tmp_fatal_errors); "
else
    DLOG="$DLOG **FATAL /+ ERRORS** ($tmp_fatal_errors/$tmp_rest_of_errors); "
fi

if [[ $tmp_audits_failed -eq 0 ]]; then
	DLOG="$DLOG audit ok"
else
	DLOG="$DLOG **AUDIT ERRORS** ($tmp_audits_failed)"
fi


# dlog echo to terminal
echo "==="
echo "$DLOG"


# send discord ping
if [[ $tmp_fatal_errors -ne 0 ]] || [[ $tmp_rest_of_errors -ne 0 ]] || [[ $tmp_audits_failed -ne 0 ]] || [[ $DEB -eq 1 ]]; then 
        ./discord.sh --webhook-url=$url --username "storj stats" --text "$DLOG"
fi


# log excerpt echo
echo "==="
echo "ERRORS"
echo "$ERRS"
echo "==="
echo "FATAL ERRORS"
echo "$FATS"
echo "==="
echo "AUDIT"
echo "$AUDS"


# send email alerts
if [[ $tmp_fatal_errors -ne 0 ]]; then 
	swaks --from "<YOUR-FROM-EMAIL>" --to "<YOUR-TO-EMAIL>" --server "<YOUR-SMTP-SERVER>" --auth LOGIN --auth-user "<YOUR-SMTP-USER>" --auth-password "<YOUR-SMTP-PASSWORD>" --h-Subject "STORAGENODE : FATAL ERRORS FOUND" --body "$FATS .. end of fatal errors selection" --silent "1"
fi
if [[ $tmp_rest_of_errors -ne 0 ]]; then 
	swaks --from "<YOUR-FROM-EMAIL>" --to "<YOUR-TO-EMAIL>" --server "<YOUR-SMTP-SERVER>" --auth LOGIN --auth-user "<YOUR-SMTP-USER>" --auth-password "<YOUR-SMTP-PASSWORD>" --h-Subject "STORAGENODE : OTHER ERRORS FOUND" --body "$ERRS .. end of other errors selection" --silent "1"
fi
if [[ $tmp_audits_failed -ne 0 ]]; then 
	swaks --from "<YOUR-FROM-EMAIL>" --to "<YOUR-TO-EMAIL>" --server "<YOUR-SMTP-SERVER>" --auth LOGIN --auth-user "<YOUR-SMTP-USER>" --auth-password "<YOUR-SMTP-PASSWORD>" --h-Subject "STORAGENODE : AUDIT ERRORS FOUND" --body "$AUDS .. end of audit errors selection" --silent "1"
fi
